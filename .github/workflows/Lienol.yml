#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
# https://github.com/kenzok8
#=================================================

name: Lienol-19.07

on: 
  release:
    types: [published]

  push:
    branches: 
      - master

#  schedule:
#    - cron: 0 8 * * 5
  
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/Lienol/openwrt
        REPO_BRANCH: dev-19.07
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
    - name: 更新提要
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
    
    - name: Costom配置文件
      run: |
          cd openwrt
          rm -f .config
          cp ../Lienol .config
          
    - name: 恢复配置
      run: |
          cd openwrt
          make defconfig

    - name: 下载dl文件包
      run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

    - name: 多线程编译
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s

    - name: 组装固件
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/

    - name : 上传固件
      uses: actions/upload-artifact@master
      with:
        name: Lienol-x64
        path: ./artifact/
